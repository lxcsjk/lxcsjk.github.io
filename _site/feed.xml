<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>YoRuo:想变得更好</title>
    <description>欢迎来到我的Blog~</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 24 Mar 2017 10:12:22 +0800</pubDate>
    <lastBuildDate>Fri, 24 Mar 2017 10:12:22 +0800</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>数据库迁移Flyway</title>
        <description>&lt;h3 id=&quot;flyway&quot;&gt;为什么需要Flyway&lt;/h3&gt;

&lt;p&gt;日常开发常常会遇到一些这样的场景&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;小红开发一个模块在本地数据库增加了两个字段，并且改动了dao层的代码提交到git。这时候小黄拉取了代码Run很可能报错。&lt;/li&gt;
  &lt;li&gt;如果在上线正式环境的时候，忘记在正式数据库执行sql脚本可能造成严重的问题。&lt;/li&gt;
  &lt;li&gt;传统的解决方式是在一个固定的地方添加sql脚本，开发人员相互沟通执行哪个sql脚本&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Flyway可以将这一类问题解决，在项目编译期就将改动写入数据库。只要启动成功就没有问题。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;flyway-&quot;&gt;Flyway 导入&lt;/h3&gt;

&lt;p&gt;如果是Gradle，在&lt;code class=&quot;highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;添加依赖&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;org.flywaydb:flyway-core:4.1.2&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Maven  在&lt;code class=&quot;highlighter-rouge&quot;&gt;pom.xml&lt;/code&gt;添加依赖&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
　　&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.flywaydb&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
　　&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;flyway-core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
　　&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;4.0.3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section&quot;&gt;实际使用&lt;/h3&gt;

&lt;p&gt;使用Spring Boot，Gradle 构建项目，添加依赖。&lt;/p&gt;

&lt;p&gt;如果是已经开发一段时间的项目需要开启 &lt;strong&gt;&lt;em&gt;baselineOnMigrate&lt;/em&gt;&lt;/strong&gt; 否则抛出异常&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Found&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;non&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reshelf2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;without&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Use&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;baseline&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baselineOnMigrate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在   &lt;strong&gt;&lt;em&gt;application.properties&lt;/em&gt;&lt;/strong&gt;  添加配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;flyway.baselineOnMigrate=true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当然也可以实现接口&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BaselineOnMigrateMigrationStrategy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FlywayMigrationStrategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;migrate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Flyway&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flyway&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;flyway&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setBaselineOnMigrate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;flyway&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;migrate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;数据库中的&lt;code class=&quot;highlighter-rouge&quot;&gt;schema_version&lt;/code&gt;为存储对比脚本版本的表&lt;/p&gt;

&lt;p&gt;sql脚本默认放置在  &lt;code class=&quot;highlighter-rouge&quot;&gt;classpath:db/migration&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;文件以.sql结尾，命名V字开头，后面数字为版本号 例如 V1__init.sql&lt;/p&gt;

&lt;p&gt;摘自 &lt;code class=&quot;highlighter-rouge&quot;&gt;org.flywaydb.core.Flyway&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;cm&quot;&gt;/**
     * The locations to scan recursively for migrations.
     * &amp;lt;p/&amp;gt;
     * &amp;lt;p&amp;gt;The location type is determined by its prefix.
     * Unprefixed locations or locations starting with {@code classpath:} point to a package on the classpath and may
     * contain both sql and java-based migrations.
     * Locations starting with {@code filesystem:} point to a directory on the filesystem and may only contain sql
     * migrations.&amp;lt;/p&amp;gt;
     * &amp;lt;p/&amp;gt;
     * (default: db/migration)
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Locations&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Locations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;db/migration&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * The encoding of Sql migrations. (default: UTF-8)
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * The schemas managed by Flyway.  These schema names are case-sensitive. (default: The default schema for the datasource connection)
     * &amp;lt;p&amp;gt;Consequences:&amp;lt;/p&amp;gt;
     * &amp;lt;ul&amp;gt;
     * &amp;lt;li&amp;gt;The first schema in the list will be automatically set as the default one during the migration.&amp;lt;/li&amp;gt;
     * &amp;lt;li&amp;gt;The first schema in the list will also be the one containing the metadata table.&amp;lt;/li&amp;gt;
     * &amp;lt;li&amp;gt;The schemas will be cleaned in the order of this list.&amp;lt;/li&amp;gt;
     * &amp;lt;/ul&amp;gt;
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;schemaNames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * &amp;lt;p&amp;gt;The name of the schema metadata table that will be used by Flyway. (default: schema_version)&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt; By default
     * (single-schema mode) the metadata table is placed in the default schema for the connection provided by the
     * datasource. &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; When the &amp;lt;i&amp;gt;flyway.schemas&amp;lt;/i&amp;gt; property is set (multi-schema mode), the metadata table is
     * placed in the first schema of the list. &amp;lt;/p&amp;gt;
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;schema_version&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * The target version up to which Flyway should consider migrations. Migrations with a higher version number will
     * be ignored. The special value {@code current} designates the current version of the schema (default: the latest version)
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MigrationVersion&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MigrationVersion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LATEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Whether placeholders should be replaced. (default: true)
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;placeholderReplacement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * The map of &amp;amp;lt;placeholder, replacementValue&amp;amp;gt; to apply to sql migration scripts.
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;placeholders&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * The prefix of every placeholder. (default: ${ )
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;placeholderPrefix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;${&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * The suffix of every placeholder. (default: } )
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;placeholderSuffix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * The file name prefix for sql migrations. (default: V)
     * &amp;lt;p/&amp;gt;
     * &amp;lt;p&amp;gt;Sql migrations have the following file name structure: prefixVERSIONseparatorDESCRIPTIONsuffix ,
     * which using the defaults translates to V1_1__My_description.sql&amp;lt;/p&amp;gt;
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqlMigrationPrefix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;V&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * The file name prefix for repeatable sql migrations. (default: R)
     * &amp;lt;p/&amp;gt;
     * &amp;lt;p&amp;gt;Repeatable sql migrations have the following file name structure: prefixSeparatorDESCRIPTIONsuffix ,
     * which using the defaults translates to R__My_description.sql&amp;lt;/p&amp;gt;
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repeatableSqlMigrationPrefix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;R&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * The file name separator for sql migrations. (default: __)
     * &amp;lt;p/&amp;gt;
     * &amp;lt;p&amp;gt;Sql migrations have the following file name structure: prefixVERSIONseparatorDESCRIPTIONsuffix ,
     * which using the defaults translates to V1_1__My_description.sql&amp;lt;/p&amp;gt;
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqlMigrationSeparator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * The file name suffix for sql migrations. (default: .sql)
     * &amp;lt;p/&amp;gt;
     * &amp;lt;p&amp;gt;Sql migrations have the following file name structure: prefixVERSIONseparatorDESCRIPTIONsuffix ,
     * which using the defaults translates to V1_1__My_description.sql&amp;lt;/p&amp;gt;
     */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqlMigrationSuffix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.sql&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可以自定义配置，但是建议不要。&lt;/p&gt;

&lt;p&gt;注意：sql脚本需要有相应的版本号，例如如果想让 &lt;code class=&quot;highlighter-rouge&quot;&gt;V2__init.sql&lt;/code&gt;执行 需要有&lt;code class=&quot;highlighter-rouge&quot;&gt;V1__init.sql&lt;/code&gt;作为一个基准对比，然后flyway才会执行相应的sql脚本。&lt;/p&gt;

&lt;p&gt;还有 文件夹的命名 是 db/migration , 但是编辑器可能会新建一个 db.migration   这样也会在日志打印出 找不到 &lt;code class=&quot;highlighter-rouge&quot;&gt;classpath: db/migration&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;一些链接&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://flywaydb.org/documentation/gradle/&quot;&gt;https://flywaydb.org/documentation/gradle/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/33029311/setting-flyway-baselineonmigrate-and-baselineversion-using-spring-boot-prope&quot;&gt;http://stackoverflow.com/questions/33029311/setting-flyway-baselineonmigrate-and-baselineversion-using-spring-boot-prope&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/30013953/how-to-use-jdbc-authentication-of-spring-boot-spring-security-with-flyway&quot;&gt;http://stackoverflow.com/questions/30013953/how-to-use-jdbc-authentication-of-spring-boot-spring-security-with-flyway&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/spark-jobserver/spark-jobserver/issues/503&quot;&gt;https://github.com/spark-jobserver/spark-jobserver/issues/503&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Fri, 10 Mar 2017 00:00:03 +0800</pubDate>
        <link>http://localhost:4000/2017/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BBFlyway/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/03/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BBFlyway/</guid>
        
        <category>数据库迁移</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>一些书</title>
        <description>&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;人丑就要多读书。&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;section&quot;&gt;没来得及分类 日后再分&lt;/h4&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;java-8&quot;&gt;Java 8&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/Java 8实战.pdf&quot;&gt;Java 8实战.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/Java8函数式编程.pdf&quot;&gt;Java8函数式编程.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/写给大忙人看的Java SE8.pdf&quot;&gt;写给大忙人看的Java SE8.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;spring&quot;&gt;Spring&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/SpringMVC.pdf&quot;&gt;SpringMVC.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/跟我学SpringMVC.pdf&quot;&gt;跟我学SpringMVC.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/跟我学spring3(1-7).pdf&quot;&gt;跟我学spring3(1-7).pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/跟我学spring3(8-13).pdf&quot;&gt;跟我学spring3(8-13).pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/跟开涛学 SpringMVC.pdf&quot;&gt;跟开涛学 SpringMVC.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/spring-boot-reference.pdf&quot;&gt;spring-boot-reference.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/spring-boot-zh.pdf&quot;&gt;spring-boot-zh.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/spring杂谈[原创].pdf&quot;&gt;spring杂谈[原创].pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;java&quot;&gt;Java多线程&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/Java多线程编程核心技术.pdf&quot;&gt;Java多线程编程核心技术.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;rxjava&quot;&gt;RxJava&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/RxJavaDocs.pdf&quot;&gt;RxJavaDocs.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;gradle&quot;&gt;Gradle&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/Gradle.in.Action文字版.pdf&quot;&gt;Gradle.in.Action文字版.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/gradle-in-action-cn.pdf&quot;&gt;gradle-in-action-cn.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;git&quot;&gt;Git&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/ProGit-zh-v2.1.1.pdf&quot;&gt;ProGit-zh-v2.1.1.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;groovy&quot;&gt;Groovy&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/Groovy入门经典.pdf&quot;&gt;Groovy入门经典.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;docker&quot;&gt;Docker&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/docker_practice.pdf&quot;&gt;Docker.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;lucene&quot;&gt;Lucene&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/Lucene 原理与代码分析完整版.pdf&quot;&gt;Lucene 原理与代码分析完整版.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;mongodb&quot;&gt;MongoDB&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/MongoDB权威指南中文版.pdf&quot;&gt;MongoDB权威指南中文版.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/深入学习MongoDB.pdf&quot;&gt;深入学习MongoDB.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;nginx&quot;&gt;Nginx&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/nginx高性能web服务器详解.pdf&quot;&gt;nginx高性能web服务器详解.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-1&quot;&gt;算法&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/Java经典问题算法大全.pdf&quot;&gt;Java经典问题算法大全.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/群体(大小为N的数组)中随机抽取一定数量(M个)的样本.pdf&quot;&gt;群体(大小为N的数组)中随机抽取一定数量(M个)的样本.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/剑指offer 名企面试官精讲典型编程题.pdf&quot;&gt;剑指offer 名企面试官精讲典型编程题.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/排序算法.pdf&quot;&gt;排序算法.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/大话数据结构（高清版）.pdf&quot;&gt;大话数据结构（高清版）.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/iOS开发进阶(唐巧).pdf&quot;&gt;iOS开发进阶(唐巧).pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-2&quot;&gt;架构&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/大型分布式网站架构设计与实践.pdf&quot;&gt;大型分布式网站架构设计与实践.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/大型网站技术架构：核心原理与案例分析.pdf&quot;&gt;大型网站技术架构：核心原理与案例分析.pdf&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Fri, 24 Feb 2017 20:00:03 +0800</pubDate>
        <link>http://localhost:4000/2017/02/%E4%B8%80%E4%BA%9B%E4%B9%A6/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/%E4%B8%80%E4%BA%9B%E4%B9%A6/</guid>
        
        <category>书</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>面试有感</title>
        <description>&lt;hr /&gt;

&lt;p&gt;最近公司因为一些事情几个人打算分道扬镳了，于是开始了面试的经历。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section&quot;&gt;找人内推&lt;/h3&gt;

&lt;p&gt;找了之前的同事，分别是链家和泛微。&lt;/p&gt;

&lt;p&gt;链家，HR那关就过不了，学校不是211，985。哎，这个确实让人很无奈，只好不再考虑。&lt;/p&gt;

&lt;p&gt;泛微，朋友给我内推后几个小时就给我打来了预约面试的电话，这个处理速度杠杠的。然后我就去面试了，到了大厅询问前台，前台妹子娴熟的拿出了笔试题，当时一种很烦的情绪油然而生…… 没有任何理由的就产生了。打算转身走的，想想是同学内推的直接走太不礼貌了。硬着头皮去写了笔试。题目很简单，jsp的内置对象，servlet启动，处理请求要调用的方法之类的。后面还有js的题目，让写js获取字符串的字节长度，&lt;strong&gt;字节…&lt;/strong&gt; 有点迷。我就搜了一些抄上去了。还有手写正则表达式之类的。越写越烦最后就懒得写了直接面，面试照着笔试题看了说写的不好，我就说实在很久没动笔了写不来字了。然后就问了一堆前端js的东西。问的我很烦，要那么重前端为啥不招个前端呢还要招服务端，后台框架一个没问，基础的多线程集合也没问。最后也就不了了之。我也懒得去，感觉技术很老很落后。以上只是我自己的个人感觉，就是这样吧。但是对人都是很客气的，就是笔试和面试的过程不愉快吧，感觉技术栈不同，而且偏离的很大。&lt;/p&gt;

&lt;p&gt;趣医网，也找了朋友内推，昨天下午才递过去吧。但是不一定去了，感觉已经找到了合适的，此刻在焦急的等待着电话… 今天早上去了二面，感觉谈的不错，薪资谈了，公司未来的方向也了解了，现状也了解不少。感觉非常不错。静静等着通知电话…… 感觉应该会过吧 = = 😭😢&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-1&quot;&gt;拉钩上投&lt;/h3&gt;

&lt;p&gt;这两天投了不少公司，接到了一些电话，也去面试了。有的只是匆匆带过，真的瞄准了的只要那么几家，彩贝壳，堆糖，名传。&lt;/p&gt;

&lt;p&gt;今天（2.18）二面的就是彩贝壳，感觉不错，去年拿到的A轮，现在已经收支平衡了。这点实在是太赞了。而且产品方向和市场也很大很有机会，感觉B轮不会远。我也在等着通知电话，咋还不打来😂😂😂。如果通过了就这家了。上班1小时到吧，气氛和技术老大（很多来自阿里巴巴，腾讯，携程，美团，大众点评）都不错。希望能加入。&lt;/p&gt;

&lt;p&gt;今天（2.20）电话面试堆糖之前就安排好了，感觉面试官懂得很多，声音听起来很年轻，对Java JDK的理解非常透彻，哪个文件夹下面的哪个文件用来干嘛都去理解了，我都没办法说出有哪些文件夹，感觉差距好大，需要学习太多了。他说我的东西 &lt;strong&gt;杂而不精&lt;/strong&gt;，这点自己早就感觉到了。总是拖延纵容自己往后退。这个毛病真的得改 = = 继续加油吧。后来来电话说上次电话面试通过了让去进一步了解一下，但是已经准备入职就婉言拒绝了&lt;/p&gt;

&lt;p&gt;今天（2.21）最后选择不是&lt;strong&gt;彩贝壳&lt;/strong&gt;是另一家，从薪资待遇上还不错吧，周末也有点时间看看女朋友。技术感觉很不错的一家公司，阿里合作伙伴。也能和之前的伙伴在一块。不过真的很感谢彩贝壳…. So Sorry…&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-2&quot;&gt;所感&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;基础，Java的集合类，IO，多线程，都是需要去深入了解的，写的代码是否优美很大程度取决于这方面。&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;主流的框架，Spring,SpringMVC,Mybatis这是基本的，对里面的加载的流程需要有一个了解，怎么使用，该怎么用，为啥这么用，有自己的理解。还有一些常用的API需要牢记，我觉得常常写的话应该不难吧。&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;SQL，对一些主流数据库的优化有一定的了解，比如MySQL。还有NoSQL，例如Redis，MongoDB。理解他们的工作机制才知道什么场景用最好。&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;分布式和并发编程，对这个的理解可能是中级到高级的跨度吧。dubbo框架，MQ消息队列常常会出现在这里。所以这是必须要去学习的。&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;底层原理和JVM，这个非常重要，也是最近一段时间我自身要去完善的。&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;学习能力，多看书，多动手，多尝试。还想学习一下Python，掌握一门脚本语言。&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;算法…………….这个 = = 先从排序开始&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Java8 RxJava函数式编程&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Python 脚本语言&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Groovy&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-3&quot;&gt;期望&lt;/h3&gt;

&lt;p&gt;和公司一起成长吧，从各方面提升自己，毕竟周围的伙伴都是那么优秀。&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Sat, 18 Feb 2017 20:00:03 +0800</pubDate>
        <link>http://localhost:4000/2017/02/%E9%9D%A2%E8%AF%95%E6%9C%89%E6%84%9F/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/%E9%9D%A2%E8%AF%95%E6%9C%89%E6%84%9F/</guid>
        
        <category>面试</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>iOS - 打ipa包和提交AppStore等事宜</title>
        <description>&lt;p&gt;整理一下关于打ipa包和提交AppStore一些琐碎简单又可能会有点烦人的流程吧…就是这样 = =&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section&quot;&gt;准备工作&lt;/h3&gt;

&lt;p&gt;首先你需要有一个苹果的开发者帐号，一个Mac系统。&lt;/p&gt;

&lt;p&gt;如果没有帐号可以在打开&lt;a href=&quot;http://developer.apple.com/&quot;&gt;http://developer.apple.com/&lt;/a&gt;申请加入苹果的开发者计划。支付99美元每年，怎么申请网上有详细的介绍，在此不多做介绍。&lt;/p&gt;

&lt;p&gt;如果你已经有了一个开发者账号，打开 &lt;a href=&quot;http://developer.apple.com/&quot;&gt;http://developer.apple.com/&lt;/a&gt; 并登录到苹果Account，见下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-104236@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-104815@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;点击右边的那个。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-105231@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;appid&quot;&gt;申请AppId&lt;/h3&gt;

&lt;p&gt;点击➕号如图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-110648@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-110715@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-110853@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后点击 &lt;strong&gt;continue&lt;/strong&gt; 即可&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-1&quot;&gt;申请发布证书&lt;/h3&gt;

&lt;p&gt;打开 &lt;strong&gt;钥匙串访问&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在下图所示的界面，你的电子邮件地址：填你开发者账号的电子邮件地址，常用名称，默认就好，CA空，选择保存到磁盘，点击”继续”：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-112002@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-112328@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;查看一下桌面，会发现多了一个 &lt;strong&gt;CertificateSigningRequest.certSigningRequest&lt;/strong&gt; 的证书请求文件。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;wwdr&quot;&gt;安装WWDR证书&lt;/h3&gt;

&lt;p&gt;点击左边 Certificates 中的 Production ，再点击右边的➕号&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-113013@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-113155@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-113201@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击 Choose File 选择我们前面生成在桌面的证书请求文件&lt;/p&gt;

&lt;p&gt;然后点击 &lt;strong&gt;Generate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;然后 点击 &lt;strong&gt;Download&lt;/strong&gt; 下载后双击 即可添加到钥匙串&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;provisioning&quot;&gt;生成Provisioning文件&lt;/h3&gt;

&lt;p&gt;左边选择 Provisioning Profiles 选项下的 Distribution，来生成一个发布的准备文件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-120215@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-120301@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-120331@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击下面的 &lt;strong&gt;Continue&lt;/strong&gt; 就可以了&lt;/p&gt;

&lt;p&gt;等待几秒钟，Provisioning就可以下载了.&lt;/p&gt;

&lt;p&gt;下载后双击添加到本地开发者账号中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-121009@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;ipa&quot;&gt;打ipa包&lt;/h3&gt;

&lt;p&gt;打开 Xcode 选择对应的 &lt;strong&gt;Provisioning&lt;/strong&gt; 如下图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-122612@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;确定这个地方不是模拟器和真机&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-122650@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;确定是发布版本不是debug不然包体积会很大&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-122736@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-122756@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后 点击 &lt;strong&gt;Product -&amp;gt; Archive&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;编译成功后，会弹出这个界面。如果失败请查看之前的哪一步出现了错误。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-123606@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-123615@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;选择一个开发者账号&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-123634@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;点击导出&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-123701@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-123713@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;保存到硬盘。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;itunes-connect&quot;&gt;上传到 iTunes Connect&lt;/h3&gt;

&lt;p&gt;打开 &lt;strong&gt;Application Loader&lt;/strong&gt; (如果没安装去iTunes Connect寻找链接)&lt;/p&gt;

&lt;h4 id=&quot;itunes-connectapp-bundle-identifier&quot;&gt;注意 上传之前在iTunes Connect必须已经创建好你的app 标识就是Bundle Identifier&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;选取ipa包&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-124618@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-124653@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这里需要等待一些时间&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-124710@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-124808@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;更改一些build的版本号重新打包就可以了&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ipa包检测通过后就能在iTunes Connect中相应的app清单中选择。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这仅仅是发布到App Store的流程肯定是不够，还有 关于推送证书的一些小坑 and 打测试ipa包到蒲公英或者PRE这一类分发平台的流程稍后继续。&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Thu, 09 Feb 2017 10:00:03 +0800</pubDate>
        <link>http://localhost:4000/2017/02/iOS%E6%89%93ipa%E5%8C%85%E6%8F%90%E4%BA%A4AppStore%E7%AD%89%E4%BA%8B%E5%AE%9C/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/iOS%E6%89%93ipa%E5%8C%85%E6%8F%90%E4%BA%A4AppStore%E7%AD%89%E4%BA%8B%E5%AE%9C/</guid>
        
        <category>AppStore</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Spring-Boot入门</title>
        <description>&lt;p&gt;之前项目中有个服务需要独立出来，同事用springboot改成了微服务，这两天没啥忙的就给拿出瞅瞅学习一下~&lt;/p&gt;

&lt;p&gt;Demo只是对 这个&lt;a href=&quot;https://github.com/abel533/MyBatis-Spring-Boot&quot;&gt;例子&lt;/a&gt; 重新写了一遍加了一些注释和自己的东西 = =&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;maven&quot;&gt;新建一个maven项目&lt;/h3&gt;

&lt;p&gt;我用的是IDEA，新建maven项目时，记得添加一个属性 &lt;strong&gt;archetypeCatalog=internal&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;archetypeCatalog表示插件使用的archetype元数据，不加这个参数时默认为remote，local，即中央仓库archetype元数据，由于中央仓库的archetype太多了，所以导致很慢，指定internal来表示仅使用内部元数据&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-191321@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-191419@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170209-191425@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section&quot;&gt;添加配置&lt;/h3&gt;

&lt;p&gt;在&lt;strong&gt;pom.xml&lt;/strong&gt;文件添加响应的配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-tools&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.5.1.RELEASE&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-configuration-processor&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Spring Boot Configuration Processor&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Spring Boot Configuration Processor&lt;span class=&quot;nt&quot;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://projects.spring.io/spring-boot/&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;organization&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;Pivotal Software, Inc.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;http://www.spring.io&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/organization&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;main.basedir&amp;gt;&lt;/span&gt;${basedir}/../..&lt;span class=&quot;nt&quot;&gt;&amp;lt;/main.basedir&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
 		&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Compile (should stick to the bare minimum) --&amp;gt;&lt;/span&gt;
 		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.vaadin.external.google&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;android-json&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Test --&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.projectlombok&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;lombok&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-test-support&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.maven.plugins&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;maven-compiler-plugin&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Ensure own annotation processor doesn't kick in --&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;proc&amp;gt;&lt;/span&gt;none&lt;span class=&quot;nt&quot;&gt;&amp;lt;/proc&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在application.properties中写入相关配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server.port=9000

druid.url=jdbc:mysql://127.0.0.1:3306/test
druid.username=root
druid.password=root
druid.initialSize=1
druid.minIdle=1
druid.maxActive=20
druid.testOnBorrow=true

#springboot默认的日志系统是logback
logging.level.tk.mybatis=TRACE

#freemarker 文件的路径
spring.mvc.view.prefix=/templates/
spring.mvc.view.suffix=.ftl
spring.freemarker.cache=false
spring.freemarker.request-context-attribute=request

#mybatis扫描的文件路径
mybatis.type-aliases-package=tk.yoruo.springboot.model
mybatis.mapper-locations=classpath:mapper/*.xml

#通用mapper的配置
mapper.mappers=tk.yoruo.springboot.util.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

#mybatis分页插件的配置
pagehelper.helper-dialect=mysql
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
pagehelper.params=count=countSql

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-1&quot;&gt;静态资源的路径&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;用了freemarker模版引擎 配置一些静态资源文件路径&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package tk.yoruo.springboot.conf;

import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;

/**
 * Created by LXC on 2017/2/9.
 */
@Configuration
public class WebMvcConfig extends WebMvcConfigurerAdapter {

    /**
     * spring-boot配置外部静态资源的方法
     *
     * @param registry
     */
    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler(&quot;/static/**&quot;).addResourceLocations(&quot;classpath:/static/&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其他的service层，实体，controller就不阐述了。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-2&quot;&gt;添加数据库配置&lt;/h3&gt;

&lt;p&gt;创建一个&lt;strong&gt;DruidProperties&lt;/strong&gt;的类&lt;/p&gt;

&lt;p&gt;添加一些属性。并加上&lt;strong&gt;@ConfigurationProperties(prefix = “druid”)&lt;/strong&gt;注解，告诉boot这个是个读取配置文件的类并且从 &lt;strong&gt;application.properties&lt;/strong&gt; 中取前缀为 &lt;strong&gt;druid&lt;/strong&gt;的value。&lt;/p&gt;

&lt;p&gt;接着创建&lt;strong&gt;DruidAutoConfiguration&lt;/strong&gt;类 加上@Configuration告诉boot这个是配置类。&lt;/p&gt;

&lt;p&gt;注入DruidProperties 并加入&lt;strong&gt;@Bean&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package tk.yoruo.springboot.druid;

import com.alibaba.druid.pool.DruidDataSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.sql.SQLException;

/**
 * Created by LXC on 2017/2/9.
 */

@Configuration
@EnableConfigurationProperties(DruidProperties.class)
// 对应的类在classpath中有存在时才会注入
@ConditionalOnClass(DruidDataSource.class)

// 对应的前缀和属性名 在classpath中有存在时才会注入
@ConditionalOnProperty(prefix = &quot;druid&quot;, name = &quot;url&quot;)
public class DruidAutoConfiguration {

    @Autowired
    private DruidProperties druidProperties;

    @Bean
    public DruidDataSource dataSource() {

        DruidDataSource druidDataSource = new DruidDataSource();
        druidDataSource.setUrl(druidProperties.getUrl());
        druidDataSource.setUsername(druidProperties.getUsername());
        druidDataSource.setPassword(druidProperties.getPassword());
        if (druidProperties.getInitialSize() &amp;gt; 0) {
            druidDataSource.setInitialSize(druidProperties.getInitialSize());
        }
        if (druidProperties.getMinIdle() &amp;gt; 0) {
            druidDataSource.setMinIdle(druidProperties.getMinIdle());
        }
        if (druidProperties.getMaxActive() &amp;gt; 0) {
            druidDataSource.setMaxActive(druidProperties.getMaxActive());
        }
        druidDataSource.setTestOnBorrow(druidProperties.isTestOnBorrow());
        try {
            druidDataSource.init();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
        return druidDataSource;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接着 在src/main/resources目录下新建META-INF文件夹，然后新建spring.factories文件，这个文件用于告诉Spring Boot去找指定的自动配置文件&lt;/p&gt;

&lt;p&gt;所以spring.factories内容为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Auto Configure
org.springframework.boot.autoconfigure.EnableAutoConfiguration=\
tk.yoruo.springboot.druid.DruidAutoConfiguration
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;druid-web&quot;&gt;添加Druid Web监控&lt;/h3&gt;

&lt;p&gt;分别继承 &lt;strong&gt;Druid&lt;/strong&gt;中的过滤器和servlet。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package tk.yoruo.springboot.druid;

import com.alibaba.druid.support.http.WebStatFilter;

import javax.servlet.annotation.WebFilter;
import javax.servlet.annotation.WebInitParam;

/**
 * Created by LXC on 2017/2/8.
 */

@WebFilter(filterName = &quot;druidWebStatFilter&quot;, urlPatterns = &quot;/*&quot;,
        initParams = {
                @WebInitParam(name = &quot;exclusions&quot;, value = &quot;*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*&quot;)// 忽略资源
        })
public class DruidStatFilter extends WebStatFilter {

}


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package tk.yoruo.springboot.druid;

import com.alibaba.druid.support.http.StatViewServlet;

import javax.servlet.annotation.WebInitParam;
import javax.servlet.annotation.WebServlet;

/**
 * Created by LXC on 2017/2/8.
 */

@SuppressWarnings(&quot;serial&quot;)
@WebServlet(urlPatterns = &quot;/druid/*&quot;,
        initParams = {
                @WebInitParam(name = &quot;allow&quot;, value = &quot;127.0.0.1&quot;),// IP白名单 (没有配置或者为空，则允许所有访问)
//                @WebInitParam(name=&quot;deny&quot;,value=&quot;192.168.16.111&quot;),// IP黑名单 (存在共同时，deny优先于allow)
                @WebInitParam(name = &quot;loginUsername&quot;, value = &quot;admin&quot;),// 用户名
                @WebInitParam(name = &quot;loginPassword&quot;, value = &quot;admin&quot;),// 密码
                @WebInitParam(name = &quot;resetEnable&quot;, value = &quot;true&quot;)// 禁用HTML页面上的“Reset All”功能
        })
public class DruidStatViewServlet extends StatViewServlet {

}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;application-servletcomponentscanservlet&quot;&gt;注意还需要在Application类上加入 &lt;strong&gt;@ServletComponentScan&lt;/strong&gt;的注解，否则扫描不到你添加的servlet。&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package tk.yoruo.springboot;

import org.mybatis.spring.annotation.MapperScan;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.web.servlet.ServletComponentScan;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import tk.yoruo.springboot.util.MyMapper;

/**
 * Created by LXC on 2017/2/9.
 */


@Controller
@ServletComponentScan
@EnableWebMvc
//@ComponentScan(basePackages = {&quot;tk.yoruo.springboot.controller&quot;,&quot;tk.yoruo.springboot.service&quot;})
@SpringBootApplication
@MapperScan(basePackages = &quot;tk.yoruo.springboot.mapper&quot;, markerInterface = MyMapper.class)
public class Application {

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

    @RequestMapping(&quot;/&quot;)
    String home() {
        return &quot;redirect:countries&quot;;
    }

}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-3&quot;&gt;注意&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Application&lt;/strong&gt; springboot启动的类，不建议放在顶级的包。例如&lt;strong&gt;src/main/java&lt;/strong&gt;下面。&lt;/p&gt;

&lt;p&gt;如果这样做了会和我一样出现这个错误&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;** WARNING ** : Your ApplicationContext is unlikely to start due to a @ComponentScan of the default package.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;如果一定要这样做，需要在&lt;strong&gt;Application&lt;/strong&gt;上加这样的注解。标明你要扫描的包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@ComponentScan(basePackages = {&quot;tk.yoruo.springboot.controller&quot;,&quot;tk.yoruo.springboot.service&quot;})
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;这样话静态资源会找不到。&lt;/p&gt;

&lt;p&gt;那应该怎么找到… 我还没去试 = =&lt;/p&gt;

&lt;p&gt;建议别这样做，放在外面启动服务时间会变久。&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Thu, 09 Feb 2017 10:00:03 +0800</pubDate>
        <link>http://localhost:4000/2017/02/Spring-Boot%E5%85%A5%E9%97%A8/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/Spring-Boot%E5%85%A5%E9%97%A8/</guid>
        
        <category>Spring</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>学习资源整理</title>
        <description>&lt;h3 id=&quot;jdk&quot;&gt;JDK&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;JDK1.7中文注解 &lt;a href=&quot;https://github.com/ZhaoX/jdk-1.7-annotated&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;http&quot;&gt;HTTP&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Http-Caching &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching?hl=zh-cn&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;spring&quot;&gt;Spring&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;张开涛的博客 &lt;a href=&quot;http://jinnianshilongnian.iteye.com/&quot;&gt;链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;mybatis&quot;&gt;MyBatis&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;对Mybatis的学习非常有帮助 (非常详细有分析源码)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;http://www.mybatis.tk&lt;/strong&gt;	&lt;a href=&quot;http://www.mybatis.tk&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;spring-boot&quot;&gt;Spring-Boot&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;官方文档&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;https://github.com/spring-projects/spring-boot&lt;/strong&gt;	&lt;a href=&quot;https://github.com/spring-projects/spring-boot&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;大牛翻译&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;https://github.com/qibaoguang&lt;/strong&gt;		&lt;a href=&quot;https://github.com/qibaoguang/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;官方文档PDF(2.0.0.BUILD-SNAPSHOT) &lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/spring-boot-reference.pdf&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;翻译后中文PDF(1.4.1.RELEASE) &lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/spring-boot-reference-guide-zh.pdf&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;插件集成博客 &lt;a href=&quot;http://blog.csdn.net/column/details/spring-boot.html&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;配置filter,listener,servlet &lt;a href=&quot;http://blog.csdn.net/yxsimple/article/details/46771123&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section&quot;&gt;小工具&lt;/h3&gt;

&lt;p&gt;内网映射 &lt;a href=&quot;https://natapp.cn/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;极客学院wiki &lt;a href=&quot;http://wiki.jikexueyuan.com/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;汉语言处理包 &lt;a href=&quot;https://github.com/hankcs/HanLP&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;docker&quot;&gt;Docker&lt;/h3&gt;

&lt;p&gt;螃蟹的博客 &lt;a href=&quot;http://www.pangxie.space&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;大桥下的蜗牛 &lt;a href=&quot;https://blog.lab99.org&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;镜像库 &lt;a href=&quot;https://hub.docker.com/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docker — 从入门到实践 &lt;a href=&quot;https://yeasy.gitbooks.io/docker_practice/content/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;网易蜂巢 &lt;a href=&quot;https://c.163.com/hub#/m/home/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docker问答录 &lt;a href=&quot;https://blog.lab99.org/post/docker-2016-07-14-faq.html#docker-push-dao-si-you-registry-zong-shi-bu-cheng-gong-zen-me-ban&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;swift&quot;&gt;Swift&lt;/h3&gt;

&lt;p&gt;翻译组 &lt;a href=&quot;http://swift.gg/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;java&quot;&gt;Java&lt;/h3&gt;

&lt;p&gt;赵鑫 &lt;a href=&quot;http://zhaox.github.io/archive&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;极客wiki &lt;a href=&quot;http://wiki.jikexueyuan.com/list/java/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;ios&quot;&gt;iOS&lt;/h3&gt;

&lt;p&gt;插件库 &lt;a href=&quot;http://github.ibireme.com/github/list/ios/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;唐巧的技术博客 &lt;a href=&quot;http://blog.devtang.com/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;刘坤的技术博客 &lt;a href=&quot;https://blog.cnbluebox.com/&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Wed, 08 Feb 2017 02:00:03 +0800</pubDate>
        <link>http://localhost:4000/2017/02/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/</guid>
        
        <category>学习</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>POI导入Excel数据常用API</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_91c0fdb50101kfd4.html&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;poi&quot;&gt;POI简介&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Apache POI是Apache软件基金会的开放源码函式库，POI提供API给Java程序对Microsoft Office格式档案读和写的功能。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;hssf&quot;&gt;HSSF概况&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;HSSF 是Horrible SpreadSheet Format的缩写，通过HSSF，你可以用纯Java代码来读取、写入、修改Excel文件。HSSF 为读取操作提供了两类API：usermodel和eventusermodel，即“用户模型”和“事件-用户模型”。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;poi-excel&quot;&gt;POI EXCEL文档结构类&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;HSSFWorkbook excel文档对象&lt;/li&gt;
  &lt;li&gt;HSSFSheet excel的sheet HSSFRow excel的行&lt;/li&gt;
  &lt;li&gt;HSSFCell excel的单元格 HSSFFont excel字体&lt;/li&gt;
  &lt;li&gt;HSSFName 名称 HSSFDataFormat 日期格式&lt;/li&gt;
  &lt;li&gt;HSSFHeader sheet头&lt;/li&gt;
  &lt;li&gt;HSSFFooter sheet尾&lt;/li&gt;
  &lt;li&gt;HSSFCellStyle cell样式&lt;/li&gt;
  &lt;li&gt;HSSFDateUtil 日期&lt;/li&gt;
  &lt;li&gt;HSSFPrintSetup 打印&lt;/li&gt;
  &lt;li&gt;HSSFErrorConstants 错误信息表&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;excel&quot;&gt;EXCEL常用操作方法&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;建立Excel常用对象&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POIFSFileSystem fs = newPOIFSFileSystem(new FileInputStream(&quot;d:/test.xls&quot;));
	
//得到Excel工作簿对象
HSSFWorkbook wb = new HSSFWorkbook(fs);
	
//得到Excel工作表对象
HSSFSheet sheet = wb.getSheetAt(0);
	
//得到Excel工作表的行
HSSFRow row = sheet.getRow(i);

//得到Excel工作表指定行的单元格
HSSFCell cell = row.getCell((short) j);

//得到单元格样式
cellStyle = cell.getCellStyle();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;建立Excel常用对象&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//创建Excel工作簿对象
HSSFWorkbook wb = new HSSFWorkbook();

//创建Excel工作表对象
HSSFSheet sheet = wb.createSheet(&quot;new sheet&quot;);

//创建Excel工作表的行
HSSFRow row = sheet.createRow((short)0);

//创建单元格样式
cellStyle = wb.createCellStyle();

//创建Excel工作表指定行的单元格
row.createCell((short)0).setCellStyle(cellStyle);

//设置Excel工作表的值
row.createCell((short)0).setCellValue(1);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;设置sheet名称和单元格内容&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wb.setSheetName(1, &quot;第一张工作表&quot;,HSSFCell.ENCODING_UTF_16);
            
cell.setEncoding((short) 1);   
   
cell.setCellValue(&quot;单元格内容&quot;);  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;取得sheet的数目&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wb.getNumberOfSheets();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;根据index取得sheet对象&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFSheet sheet = wb.getSheetAt(0);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;取得有效的行数&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int rowcount = sheet.getLastRowNum();   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;取得一行的有效单元格个数&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;row.getLastCellNum();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;单元格值类型读写&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//设置单元格为STRING类型
cell.setCellType(HSSFCell.CELL_TYPE_STRING);
	
//读取为数值类型的单元格内容
cell.getNumericCellValue();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;设置列宽、行高&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sheet.setColumnWidth((short)column,(short)width);

row.setHeight((short)height);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;添加区域，合并单元格&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//合并从第rowFrom行columnFrom列
Region region = new Region((short)rowFrom,(short)columnFrom,(short)rowTo  
(short)columnTo);

//到rowTo行columnTo的区域
sheet.addMergedRegion(region);

//得到所有区域       
sheet.getNumMergedRegions()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;保存Excel文件&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FileOutputStream fileOut = new FileOutputStream(path); 
wb.write(fileOut); 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;根据单元格不同属性返回字符串数值&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    public String getCellStringValue(HSSFCell cell) {
        String cellValue = &quot;&quot;;
        switch (cell.getCellType()) {
            case HSSFCell.CELL_TYPE_STRING://字符串类型 
                cellValue = cell.getStringCellValue();
                if (cellValue.trim().equals(&quot;&quot;) || cellValue.trim().length() &amp;lt;= 0)
                    cellValue = &quot;&quot;;
                break;
            case HSSFCell.CELL_TYPE_NUMERIC://数值类型 
                cellValue = String.valueOf(cell.getNumericCellValue());
                break;
            case HSSFCell.CELL_TYPE_FORMULA://公式 
                cell.setCellType(HSSFCell.CELL_TYPE_NUMERIC);
                cellValue = String.valueOf(cell.getNumericCellValue());
                break;
            case HSSFCell.CELL_TYPE_BLANK:
                cellValue = &quot;&quot;;
                break;
            case HSSFCell.CELL_TYPE_BOOLEAN:
                break;
            case HSSFCell.CELL_TYPE_ERROR:
                break;
            default:
                break;
        }
        return cellValue;
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;保存Excel文件&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFCellStyle style = wb.createCellStyle();
//下边框
style.setBorderBottom(HSSFCellStyle.BORDER_DOTTED);
//左边框  
style.setBorderLeft(HSSFCellStyle.BORDER_DOTTED);
//右边框
style.setBorderRight(HSSFCellStyle.BORDER_THIN);
//上边框
style.setBorderTop(HSSFCellStyle.BORDER_THIN);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;设置字体和内容位置&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFFont f  = wb.createFont();
//字号
f.setFontHeightInPoints((short) 11);
//加粗
f.setBoldweight(HSSFFont.BOLDWEIGHT_NORMAL);
style.setFont(f);
//左右居中
style.setAlignment(HSSFCellStyle.ALIGN_CENTER);
//上下居中
style.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);
//单元格内容的旋转的角度
style.setRotation(short rotation);

HSSFDataFormat df = wb.createDataFormat();
//设置单元格数据格式
style1.setDataFormat(df.getFormat(&quot;0.00%&quot;));
//给单元格设公式    
cell.setCellFormula(string);
//单元格内容的旋转的角度     
style.setRotation(short rotation);  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;插入图片&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//先把读进来的图片放到一个ByteArrayOutputStream中，以便产生ByteArray       
ByteArrayOutputStream byteArrayOut = new ByteArrayOutputStream();      
BufferedImage bufferImg = ImageIO.read(new File(&quot;ok.jpg&quot;));      
ImageIO.write(bufferImg,&quot;jpg&quot;,byteArrayOut);      
//读进一个excel模版       
FileInputStream fos = new FileInputStream(filePathName+&quot;/stencil.xlt&quot;);       
fs = new POIFSFileSystem(fos);      
//创建一个工作薄       
HSSFWorkbook wb = new HSSFWorkbook(fs);      
HSSFSheet sheet = wb.getSheetAt(0);      
HSSFPatriarch patriarch = sheet.createDrawingPatriarch();      
HSSFClientAnchor anchor = new HSSFClientAnchor(0,0,1023,255,(short) 0,0,(short)10,10);           
patriarch.createPicture(anchor , wb.addPicture(byteArrayOut.toByteArray(),HSSFWorkbook.PICTURE_TYPE_JPEG));
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;调整工作表位置&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFWorkbook wb = new HSSFWorkbook();     
HSSFSheet sheet = wb.createSheet(&quot;format sheet&quot;);     
HSSFPrintSetup ps = sheet.getPrintSetup();     
sheet.setAutobreaks(true);     
ps.setFitHeight((short)1);     
ps.setFitWidth((short)1);   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;设置打印区域&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFSheet sheet = wb.createSheet(&quot;Sheet1&quot;);     
wb.setPrintArea(0, &quot;$A$1:$C$2&quot;);   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;标注脚注&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFSheet sheet = wb.createSheet(&quot;format sheet&quot;);     
HSSFFooter footer = sheet.getFooter()     
footer.setRight( &quot;Page &quot; + HSSFFooter.page() + &quot; of &quot; + HSSFFooter.numPages() );  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;在工作单中清空行数据，调整行位置&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFWorkbook wb = new HSSFWorkbook();     
HSSFSheet sheet = wb.createSheet(&quot;row sheet&quot;);     
// Create various cells and rows for spreadsheet.      
// Shift rows 6 - 11 on the spreadsheet to the top (rows 0 - 5)      
sheet.shiftRows(5, 10, -5); 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;选中指定的工作表&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFSheet sheet = wb.createSheet(&quot;row sheet&quot;);     
heet.setSelected(true); 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;工作表的放大缩小&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFSheet sheet1 = wb.createSheet(&quot;new sheet&quot;);     
sheet1.setZoom(1,2);   // 50 percent magnification   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;头注和脚注&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFSheet sheet = wb.createSheet(&quot;new sheet&quot;);     
HSSFHeader header = sheet.getHeader();     
header.setCenter(&quot;Center Header&quot;);     
header.setLeft(&quot;Left Header&quot;);     
header.setRight(HSSFHeader.font(&quot;Stencil-Normal&quot;, &quot;Italic&quot;) +     
HSSFHeader.fontSize((short) 16) + &quot;Right w/ Stencil-Normal Italic font and size 16&quot;);    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;自定义颜色&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFCellStyle style = wb.createCellStyle();     
style.setFillForegroundColor(HSSFColor.LIME.index);     
style.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND);     
HSSFFont font = wb.createFont();     
font.setColor(HSSFColor.RED.index);     
style.setFont(font);     
cell.setCellStyle(style);    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;小结&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;设置不显示excel网格线 &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sheet.setDisplayGridlines(false);
其中sheet是Sheet对象 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;设置excel单元格中的内容换行 &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cellStyle.setWrapText(true);

其中cellStyle是WorkBook创建的CellStyle对象,然后将cellStyle设置到要换行的Cell对象,最后在要换行的对象(一般为字符串)加入&quot;/r/n&quot;。如  topTile.append(&quot;/r/n&quot; +&quot;cellContent&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;单元格的合并 &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sheet.addMergedRegion(new CellRangeAddress(0, 4, 0, 2));

本示例为合并4行2列
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;设置页眉和页脚的页数 &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFHeader header = sheet.getHeader(); 
 header.setCenter(&quot;Center Header&quot;);
 header.setLeft(&quot;Left Header&quot;);
 header.setRight(HSSFHeader.font(&quot;Stencil-Normal&quot;, &quot;Italic&quot;) + HSSFHeader.fontSize((short) 16) + &quot;Right w/ Stencil-Normal Italic font and size 16&quot;);
 HSSFFooter footer = (HSSFFooter )sheet.getFooter()  footer.setRight( &quot;Page &quot; + HSSFFooter.page() + &quot; of &quot; + HSSFFooter.numPages() );
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;使得一个Sheet适合一页 &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sheet.setAutobreaks(true); 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;设置放大属性 &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sheet.setZoom(3,4);
Zoom被明确为一个分数，例如下面的75%使用3作为分子，4作为分母
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;设置打印&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFPrintSetup print = (HSSFPrintSetup) sheet.getPrintSetup();
 print.setLandscape(true);//设置横向打印
 print.setScale((short) 70);//设置打印缩放70%
 print.setPaperSize(HSSFPrintSetup.A4_PAPERSIZE);//设置为A4纸张 
 print.setLeftToRight(true);//設置打印顺序先行后列,默认为先列行
             print.setFitHeight((short) 10);设置缩放调整为10页高 
 print.setFitWidth((short) 10);设置缩放调整为宽高 
 sheet.setAutobreaks(false); 
 if (i != 0 &amp;amp;&amp;amp; i % 30 == 0) {
     sheet.setRowBreak(i);//设置每30行分页打印
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;反复的行和列&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HSSFWorkbook wb = new HSSFWorkbook();  wb.setRepeatingRowsAndColumns(0, 0, 12, 1, 6);
//设置1到12列,行1到6每一页重复打印 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;调整单元格宽度&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sheet.setAutobreaks(true);
sheet.setColumnWidth((short)i,colsWidth[i]);
//设定单元格长度
 sheet.autoSizeColumn((short) i);
//自动根据长度调整单元格长度 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 06 Feb 2017 20:00:03 +0800</pubDate>
        <link>http://localhost:4000/2017/02/%E5%AF%BC%E5%85%A5Excel%E6%95%B0%E6%8D%AE%E5%B8%B8%E7%94%A8API/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/%E5%AF%BC%E5%85%A5Excel%E6%95%B0%E6%8D%AE%E5%B8%B8%E7%94%A8API/</guid>
        
        <category>POI</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>iOS抓包工具 - Charles</title>
        <description>&lt;p&gt;过年也在家也没啥事情，闲着无聊就整理整理自己学习iOS的经历以及解决的问题and知识点（虽然我很菜😂😂）。温故而知新吧😀😀&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Charles&lt;/strong&gt; 一个网络抓包工具，可以清晰看到网络请求参数值以及返回的response结果。对于日常开发还是非常有帮助的。&lt;/p&gt;

&lt;h3 id=&quot;charles&quot;&gt;安装 Charles&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.charlesproxy.com/&quot;&gt;有钱请支持正版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://oh6uhie7j.bkt.clouddn.com/charles-proxy-4.0.1.zip&quot;&gt;没钱戳这里(请支持正版)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;拖入  &lt;strong&gt;应用程序&lt;/strong&gt;  即可&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;charles-1&quot;&gt;Charles的简单使用&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;将Charles设置成系统的代理服务器。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如图。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-193921@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后就可以看到很多网络请求出现在Charles的界面里&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-193551@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;显示视图&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Charles提供了两种显示视图的方式，分别为 &lt;strong&gt;Structure&lt;/strong&gt; 和 &lt;strong&gt;Sequence&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;区别如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Structure&lt;/strong&gt; 视图将网络请求按访问的域名分类。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sequence&lt;/strong&gt; 视图将网络请求按访问的时间排序。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;前面的图为&lt;strong&gt;Structure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;下面的图为&lt;strong&gt;Sequence&lt;/strong&gt;
&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-194802@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;单击其中一个网络请求，根据面板上的tag即可在下面空白看到相应的&lt;strong&gt;request&lt;/strong&gt;请求参数和&lt;strong&gt;response&lt;/strong&gt;返回结果了&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;过滤网络请求&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;在 &lt;strong&gt;Sequence&lt;/strong&gt; 视图模式有一个 &lt;strong&gt;Filter&lt;/strong&gt; 的输入框&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-195706@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;另一种方式，选中一个在右键出的下拉菜单中点击 &lt;strong&gt;Focus&lt;/strong&gt;，然后&lt;strong&gt;Filter&lt;/strong&gt; 的输入框后面勾选 &lt;strong&gt;Focused&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-200349@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;在 &lt;strong&gt;Structure&lt;/strong&gt; 视图模式 在菜单栏选择 &lt;code class=&quot;highlighter-rouge&quot;&gt;Proxy-&amp;gt;Recording Settings&lt;/code&gt;，然后选择 Include 栏，选择添加一个项目，然后填入需要监控的协议，主机地址，端口号。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-200139@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section&quot;&gt;抓取移动设备上的请求封包&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;设置Charles的代理功能 如图&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-201137@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;手机上的设置&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;PC和手机最好用同一个网关要方便点，毕竟都是在办公室工作嘛。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;获取到电脑的ip地址&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-201522@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;设置手机的HTTP代理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;进入到 “设置” - “无线局域网” - “【你的WiFi名字】旁边的详情”
向下拉到最底，填入你PC的ip和Charles的代理端口号&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/6646E7369EAC5D316F3E2C9AFD4C5513.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择 &lt;strong&gt;Allow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-202158@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在面版将会看到手机发出接受的网络请求了。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;https&quot;&gt;抓包HTTPS&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;安装 &lt;strong&gt;Charles&lt;/strong&gt; 的CA证书&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;“菜单栏” - “SSL Proxying” - “Install Charles Root Certificate”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-202745@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在钥匙串中可以搜索到
&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-202909@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后选中一条 HTTPS 请求，右键选择 &lt;strong&gt;Enable SSL proxy&lt;/strong&gt; 然后就能看到不再乱码的请求信息了&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-203656@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;抓包移动设备的SSL请求&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这里需要在手机上安装一个证书，如图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/C140ACC2-C585-4CCA-9CE2-394FCA2B9359.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-203821@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;弹出一个提示告诉你 需要设置代理然后用手机浏览器打开一个地址安装一个证书  &lt;a href=&quot;http://chls.pro/ssl&quot;&gt;地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/1D32AC22C2B0BF8458259E30A7DF427F.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后和上面一样 &lt;strong&gt;Enable SSL proxy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;example ~&lt;/p&gt;

&lt;p&gt;抓包keep的小视频&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-205909@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;section-1&quot;&gt;模拟网络环境差&lt;/h3&gt;

&lt;p&gt;Charles提供这样的支持，只需要更改添加配置与host即可。如图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20170122-205122@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;目前常常用到就是这么多~~~ 如果有不足可以看看 &lt;a href=&quot;http://blog.devtang.com/2015/11/14/charles-introduction/&quot;&gt;唐巧大神的博客&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Jan 2017 20:00:03 +0800</pubDate>
        <link>http://localhost:4000/2017/01/iOS%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7-Charles/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/iOS%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7-Charles/</guid>
        
        <category>Charles</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>2017</title>
        <description>&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;2017的目标~~&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;16年的有几个还是没完成，特别是体重！！！ 166了 妈惹。 想大一我才120. 😉😉😉&lt;/p&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;p&gt;今年，本命年。😢😢😢&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Work：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;iOS开发也接触了一段时间，转眼大半年两个app都上了，java有点荒废了，js也进步了。所以在寒假把java的基础复习复习，顺便把项目不完善的地方改改。毕竟寒假在家也没有啥事情。感觉JavaScript真是神奇的语言，慢慢体会其中的精髓。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;提到工资了，13k吧，每个月的房贷也不少，感觉拿这个数字不难。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;好吧，那本书还在睡觉，所以还是得好好看看。（以后绝对不会再买实体书有了iPad还是PDF，环保健康！）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Life:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;已经看过了周董的演唱会，如果17年有闲钱的话去旅旅游吧。很久没出去走走了。 暂定  厦门 &amp;amp; 云南 &amp;amp; 内蒙古&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;换个房子住，离地铁近点，租金可能贵点但是要舒服很多，逃离松江，总感觉有点点脏。还是浦东干净舒适。可能去猴子那边小区找个房子，等猴子留学回来还可以蹭蹭饭。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;还是体重体重体重。。 说三遍 = = （PS:我妹说减肥等于整容）换了房子再在咸鱼找个转卡的，去健健身。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</description>
        <pubDate>Thu, 05 Jan 2017 20:00:03 +0800</pubDate>
        <link>http://localhost:4000/2017/01/2017/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/01/2017/</guid>
        
        <category>My</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Invalid Bundle. iPad Multitasking support requires these orientations</title>
        <description>&lt;p&gt;前段时间把app适配一下iPad，再提交的时候出了一些问题&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ERROR ITMS-90474: “Invalid Bundle. iPad Multitasking support requires these orientations: ‘UIInterfaceOrientationPortrait,UIInterfaceOrientationPortraitUpsideDown,UIInterfaceOrientationLandscapeLeft,UIInterfaceOrientationLandscapeRight’. Found ‘UIInterfaceOrientationPortrait,UIInterfaceOrientationLandscapeLeft,UIInterfaceOrientationLandscapeRight’ in bundle “bundle_Name”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;查了一下资料原来是 &lt;strong&gt;ios9 iPad 的分屏适配&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;So~
&lt;img src=&quot;http://oh6uhie7j.bkt.clouddn.com/QQ20161224-132228@2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再次提交一下 OK啦&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Thu, 22 Dec 2016 20:00:03 +0800</pubDate>
        <link>http://localhost:4000/2016/12/Invalid-Bundle.-iPad-Multitasking-support-requires-these-orientations/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/12/Invalid-Bundle.-iPad-Multitasking-support-requires-these-orientations/</guid>
        
        <category>iOS</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
